buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = "https://dl.bintray.com/kotlin/kotlin-eap" }
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.10"
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "4.0.4"
    id "com.wynprice.cursemaven" version "2.1.1"
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

repositories {
    maven {
        name = "Kotlin Early Access"
        url = "https://dl.bintray.com/kotlin/kotlin-eap"
    }
    maven {
        name = 'kotlinforforge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
}

version = '1.0'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: "${mcp_mappings}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('build/resources/main/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')
            properties 'mixin.env.disableRefMap': 'true'

            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            // property 'forge.logging.console.level', 'debug'

            mods {
                TechMod {
                    source project(':TechMod').sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            properties 'mixin.env.disableRefMap': 'true'

            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            // property 'forge.logging.console.level', 'debug'

            mods {
                TechMod {
                    source project(':TechMod').sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            properties 'mixin.env.disableRefMap': 'true'

            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            // property 'forge.logging.console.level', 'debug'
            args '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0]

            mods {
                TechMod {
                    source project(':TechMod').sourceSets.main
                }
            }
        }
    }
}

dependencies {
    // Forge itself
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // Kotlin stuff
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.72"
    implementation 'thedarkcolour:kotlinforforge:1.6.2'

    // Runtime third-party mods
    runtimeOnly fg.deobf("curse.maven:mcjtylib:3097756")
    runtimeOnly fg.deobf("curse.maven:rftools-base:3087298")
    runtimeOnly fg.deobf("curse.maven:rftools-power:3087309")
    runtimeOnly fg.deobf("curse.maven:xnet:3096839")

    // Workspace mods
    compile project(':TechMod')
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
